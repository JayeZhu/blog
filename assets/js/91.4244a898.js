(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{445:function(t,a,r){"use strict";r.r(a);var s=r(8),e=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("在深入了解浏览器之前，我们不妨打开一下任务管理器，看看浏览器运行时都有哪些东西\n[!任务管理器]("),a("a",{attrs:{href:"https://gitee.com/jayezhu/image/blob/master/blog/20210604004205.png",target:"_blank",rel:"noopener noreferrer"}},[t._v("blog/20210604010125798.png"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("我们看到表头有任务、内存占用空间、CPU、网络、进程等字样，这里面除开网络，其他几个都与进程息息相关。")]),t._v(" "),a("h2",{attrs:{id:"任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#任务"}},[t._v("#")]),t._v(" 任务")]),t._v(" "),a("p",[t._v("任务 （task）是最抽象的，指软件完成的一个活动，既可以是进程，也可以是线程。")]),t._v(" "),a("h3",{attrs:{id:"任务调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#任务调度"}},[t._v("#")]),t._v(" 任务调度")]),t._v(" "),a("p",[t._v("大部分操作系统(如Windows、Linux)的任务调度是采用时间片轮转的抢占式调度方式，也就是说一个任务执行一小段时间后强制暂停去执行下一个任务，每个任务轮流执行。任务执行的一小段时间叫做时间片，任务正在执行时的状态叫运行状态，任务执行一段时间后强制暂停去执行下一个任务，被暂停的任务就处于就绪状态等待下一个属于它的时间片的到来。")]),t._v(" "),a("p",[t._v("这样每个任务都能得到执行，由于CPU的执行效率非常高，时间片非常短，在各个任务之间快速地切换，给人的感觉就是多个任务在“同时进行”，这也就是我们所说的并发(别觉得并发有多高深，它的实现很复杂，但它的概念很简单，就是一句话：多个任务同时执行)。")]),t._v(" "),a("h2",{attrs:{id:"cpu"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpu"}},[t._v("#")]),t._v(" CPU")]),t._v(" "),a("p",[t._v("CPU 是计算机的核心，负责承担计算机的计算任务，可以比作一个工厂。")]),t._v(" "),a("h2",{attrs:{id:"内存占用空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存占用空间"}},[t._v("#")]),t._v(" 内存占用空间")]),t._v(" "),a("p",[t._v("内存占用空间可以理解为工厂分配的资源")]),t._v(" "),a("h2",{attrs:{id:"进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程"}},[t._v("#")]),t._v(" 进程")]),t._v(" "),a("p",[t._v("任务调度中，进程作为任务调度的最小单位，每个进程有各自独立的一块内存，使得各个进程之间内存相互隔离。所以可以说")]),t._v(" "),a("blockquote",[a("p",[t._v("进程是 CPU 资源分配的最小单位\n那么可以理解为，CPU 工厂为线程这个最小单位分配了内存等资源，而这个进程就是代表工厂里面的车间，它能代表 CPU 处理的最小任务。")])]),t._v(" "),a("h2",{attrs:{id:"线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程"}},[t._v("#")]),t._v(" 线程")]),t._v(" "),a("p",[t._v("后来，随着计算机的发展，对 CPU 的要求越来越高，进程之间切换开窍较大，已经无法满足越来越复杂的程序要求，就产生了线程，可以认为")]),t._v(" "),a("blockquote",[a("p",[t._v("线程是 PCU 调度的更小单位\n将线程可以比作进程车间中的工人，每个车间有多个工人协同完成一个任务。")])]),t._v(" "),a("h2",{attrs:{id:"多进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多进程"}},[t._v("#")]),t._v(" 多进程")]),t._v(" "),a("p",[t._v("多进程指的是在同一个时间里，同一个计算机系统中如果允许两个或两个以上的进程处于运行状态。多进程带来的好处是明显的，比如你可以听歌的同时，打开编辑器敲代码，编辑器和听歌软件的进程之间丝毫不会相互干扰。")]),t._v(" "),a("h2",{attrs:{id:"多线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多线程"}},[t._v("#")]),t._v(" 多线程")]),t._v(" "),a("p",[t._v("多线程是指程序中包含多个执行流，即在一个程序中可以同时运行多个不同的线程来执行不同的任务，也就是说允许单个程序创建多个并行执行的线程来完成各自的任务。")]),t._v(" "),a("h2",{attrs:{id:"引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用"}},[t._v("#")]),t._v(" 引用")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.imweb.io/topic/58e3bfa845e5c13468f567d5",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器进程？线程？傻傻分不清楚！"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);