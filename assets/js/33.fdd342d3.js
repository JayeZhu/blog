(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{462:function(t,a,s){"use strict";s.r(a);var n=s(16),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),s("p",[t._v("在查找变量和函数的时候，会先从当前执行上下文的变量对象中查找，如果没有找到，就会从父级执行上下文的变量对象中查找，一直找到全局上下文的变量对象(全局对象)。这样由多个执行上下文的变量对象构成的链表就是作用域链。")]),t._v(" "),s("p",[t._v("作用域链在代码执行时被创建，主要用途是能够有序访问到执行环境有权访问的所有变量和函数。")]),t._v(" "),s("h2",{attrs:{id:"结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构"}},[t._v("#")]),t._v(" 结构")]),t._v(" "),s("p",[t._v("作用域链实质上是一个指向变量对象的指针列表，只存放引用而不包括变量对象，其前端始终都是当前指向上下文的变量对象，如果该变量对象被激活，则指向的是活动对象，其尾端始终指向全局执行上下文，也就是全局对象。")]),t._v(" "),s("h2",{attrs:{id:"创建过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建过程"}},[t._v("#")]),t._v(" 创建过程")]),t._v(" "),s("p",[t._v("作用域链的创建过程是动态的，会分为全局阶段、函数阶段、函数阶段还有被激活为活动对象阶段。执行上下文中的 "),s("code",[t._v("[[Scope]]")]),t._v("（作用域）\n会指向这个创建的作用域链。")]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"全局阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局阶段"}},[t._v("#")]),t._v(" 全局阶段")]),t._v(" "),s("p",[t._v("代码执行前会创建全局执行上下文，全局上下文的 "),s("code",[t._v("[[Scope]]")]),t._v(" 指向作用域链，而这个作用域链的第一个指针就指向了全局对象，可以表示为：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("globalContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Scope"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  globalContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VO")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里使用了数组指代作用域链指针链表")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("在创建完作用域链后，JS 引擎还会为全局对象中的函数添加 "),s("code",[t._v("[[Scope]]")]),t._v("，这个属性就是全局上下文的"),s("code",[t._v("[[Scope]]")])]),t._v(" "),s("h3",{attrs:{id:"函数阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数阶段"}},[t._v("#")]),t._v(" 函数阶段")]),t._v(" "),s("p",[t._v("全局上下文创建后，")])])}),[],!1,null,null,null);a.default=e.exports}}]);