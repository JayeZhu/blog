(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{391:function(a,t,s){"use strict";s.r(t);var n=s(8),e=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[a._v("#")]),a._v(" 定义")]),a._v(" "),t("p",[a._v("在查找变量和函数的时候，会先从当前执行上下文的变量对象中查找，如果没有找到，就会从父级执行上下文的变量对象中查找，一直找到全局上下文的变量对象(全局对象)。这样由多个执行上下文的变量对象构成的链表就是作用域链。")]),a._v(" "),t("p",[a._v("作用域链在代码执行时被创建，主要用途是能够有序访问到执行环境有权访问的所有变量和函数。")]),a._v(" "),t("h2",{attrs:{id:"结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结构"}},[a._v("#")]),a._v(" 结构")]),a._v(" "),t("p",[a._v("作用域链实质上是一个指向变量对象的指针列表，只存放引用而不包括变量对象，其前端始终都是当前指向上下文的变量对象，如果该变量对象被激活，则指向的是活动对象，其尾端始终指向全局执行上下文，也就是全局对象。")]),a._v(" "),t("h2",{attrs:{id:"创建过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建过程"}},[a._v("#")]),a._v(" 创建过程")]),a._v(" "),t("p",[a._v("作用域链的创建过程是动态的，会分为全局阶段、函数阶段、函数阶段还有被激活为活动对象阶段。执行上下文中的 "),t("code",[a._v("[[Scope]]")]),a._v("（作用域）\n会指向这个创建的作用域链。")]),a._v(" "),t("p",[a._v("例子：")]),a._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h3",{attrs:{id:"全局阶段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全局阶段"}},[a._v("#")]),a._v(" 全局阶段")]),a._v(" "),t("p",[a._v("代码执行前会创建全局执行上下文，全局上下文的 "),t("code",[a._v("[[Scope]]")]),a._v(" 指向作用域链，而这个作用域链的第一个指针就指向了全局对象，可以表示为：")]),a._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[a._v("globalContext"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Scope"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n  globalContext"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("VO")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 这里使用了数组指代作用域链指针链表")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("在创建完作用域链后，JS 引擎还会为全局对象中的函数添加 "),t("code",[a._v("[[Scope]]")]),a._v("，这个属性就是全局上下文的"),t("code",[a._v("[[Scope]]")])]),a._v(" "),t("h3",{attrs:{id:"函数阶段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数阶段"}},[a._v("#")]),a._v(" 函数阶段")]),a._v(" "),t("p",[a._v("全局上下文创建后，")])])}),[],!1,null,null,null);t.default=e.exports}}]);