(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{468:function(n,a,r){"use strict";r.r(a);var t=r(15),s=Object(t.a)({},(function(){var n=this,a=n.$createElement,r=n._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[r("h2",{attrs:{id:"前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[n._v("#")]),n._v(" 前言")]),n._v(" "),r("p",[n._v("去重一般是后端的工作，不过前端也可以完成")]),n._v(" "),r("div",{staticClass:"language-javascript line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-javascript"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("var")]),n._v(" arr "),r("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("[")]),r("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token string"}},[n._v("'true'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token string"}},[n._v("'true'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token boolean"}},[n._v("true")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token boolean"}},[n._v("true")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token number"}},[n._v("15")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token number"}},[n._v("15")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token boolean"}},[n._v("false")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token boolean"}},[n._v("false")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("undefined")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("undefined")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("null")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("null")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[n._v("NaN")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[n._v("NaN")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token string"}},[n._v("'NaN'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[n._v("'a'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[n._v("'a'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n")])]),n._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[n._v("1")]),r("br")])]),r("h2",{attrs:{id:"一、利用es6-set去重-es6中最常用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、利用es6-set去重-es6中最常用"}},[n._v("#")]),n._v(" 一、利用ES6 Set去重（ES6中最常用）")]),n._v(" "),r("div",{staticClass:"language-js line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("function")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[n._v("unique")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),r("span",{pre:!0,attrs:{class:"token parameter"}},[n._v("arr")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" Array"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[n._v("from")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("new")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Set")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("arr"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("var")]),n._v(" arr "),r("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("[")]),r("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token string"}},[n._v("'true'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token string"}},[n._v("'true'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token boolean"}},[n._v("true")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token boolean"}},[n._v("true")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token number"}},[n._v("15")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token number"}},[n._v("15")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token boolean"}},[n._v("false")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token boolean"}},[n._v("false")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("undefined")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("undefined")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("null")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("null")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[n._v("NaN")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[n._v("NaN")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token string"}},[n._v("'NaN'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[n._v("'a'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[n._v("'a'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\nconsole"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[n._v("log")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),r("span",{pre:!0,attrs:{class:"token function"}},[n._v("unique")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("arr"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n "),r("span",{pre:!0,attrs:{class:"token comment"}},[n._v('//[1, "true", true, 15, false, undefined, null, NaN, "NaN", 0, "a", {}, {}]')]),n._v("\n")])]),n._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[n._v("1")]),r("br"),r("span",{staticClass:"line-number"},[n._v("2")]),r("br"),r("span",{staticClass:"line-number"},[n._v("3")]),r("br"),r("span",{staticClass:"line-number"},[n._v("4")]),r("br"),r("span",{staticClass:"line-number"},[n._v("5")]),r("br"),r("span",{staticClass:"line-number"},[n._v("6")]),r("br")])]),r("p",[n._v("不考虑兼容性，这种去重的方法代码最少。这种方法还无法去掉“{}”空对象，后面的高阶方法会添加去掉重复“{}”的方法。")]),n._v(" "),r("p",[n._v("二、利用for嵌套for，然后splice去重（ES5中最常用）\nfunction unique(arr){"),r("br"),n._v("\nfor(var i=0; i<arr.length; i++){\nfor(var j=i+1; j<arr.length; j++){\nif(arr[i]==arr[j]){         //第一个等同于第二个，splice方法删除第二个\narr.splice(j,1);\nj--;\n}\n}\n}\nreturn arr;\n}\nvar arr = [1,1,'true','true',true,true,15,15,false,false, undefined,undefined, null,null, NaN, NaN,'NaN', 0, 0, 'a', 'a',{},{}];\nconsole.log(unique(arr))\n//[1, \"true\", 15, false, undefined, NaN, NaN, \"NaN\", \"a\", {…}, {…}]     //NaN和{}没有去重，两个null直接消失了\n双层循环，外层循环元素，内层循环时比较值。值相同时，则删去这个值。\n想快速学习更多常用的ES6语法，可以看我之前的文章《学习ES6笔记──工作中常用到的ES6语法》。")]),n._v(" "),r("p",[n._v("三、利用indexOf去重\nfunction unique(arr) {\nif (!Array.isArray(arr)) {\nconsole.log('type error!')\nreturn\n}\nvar array = [];\nfor (var i = 0; i < arr.length; i++) {\nif (array .indexOf(arr[i]) === -1) {\narray .push(arr[i])\n}\n}\nreturn array;\n}\nvar arr = [1,1,'true','true',true,true,15,15,false,false, undefined,undefined, null,null, NaN, NaN,'NaN', 0, 0, 'a', 'a',{},{}];\nconsole.log(unique(arr))\n// [1, \"true\", true, 15, false, undefined, null, NaN, NaN, \"NaN\", 0, \"a\", {…}, {…}]  //NaN、{}没有去重\n新建一个空的结果数组，for 循环原数组，判断结果数组是否存在当前元素，如果有相同的值则跳过，不相同则push进数组。")]),n._v(" "),r("p",[n._v("四、利用sort()\nfunction unique(arr) {\nif (!Array.isArray(arr)) {\nconsole.log('type error!')\nreturn;\n}\narr = arr.sort()\nvar arrry= [arr[0]];\nfor (var i = 1; i < arr.length; i++) {\nif (arr[i] !== arr[i-1]) {\narrry.push(arr[i]);\n}\n}\nreturn arrry;\n}\nvar arr = [1,1,'true','true',true,true,15,15,false,false, undefined,undefined, null,null, NaN, NaN,'NaN', 0, 0, 'a', 'a',{},{}];\nconsole.log(unique(arr))\n// [0, 1, 15, \"NaN\", NaN, NaN, {…}, {…}, \"a\", false, null, true, \"true\", undefined]      //NaN、{}没有去重\n利用sort()排序方法，然后根据排序后的结果进行遍历及相邻元素比对。")]),n._v(" "),r("p",[n._v("五、利用对象的属性不能相同的特点进行去重（这种数组去重的方法有问题，不建议用，有待改进）\nfunction unique(arr) {\nif (!Array.isArray(arr)) {\nconsole.log('type error!')\nreturn\n}\nvar arrry= [];\nvar  obj = {};\nfor (var i = 0; i < arr.length; i++) {\nif (!obj[arr[i]]) {\narrry.push(arr[i])\nobj[arr[i]] = 1\n} else {\nobj[arr[i]]++\n}\n}\nreturn arrry;\n}\nvar arr = [1,1,'true','true',true,true,15,15,false,false, undefined,undefined, null,null, NaN, NaN,'NaN', 0, 0, 'a', 'a',{},{}];\nconsole.log(unique(arr))\n//[1, \"true\", 15, false, undefined, null, NaN, 0, \"a\", {…}]    //两个true直接去掉了，NaN和{}去重\n六、利用includes\nfunction unique(arr) {\nif (!Array.isArray(arr)) {\nconsole.log('type error!')\nreturn\n}\nvar array =[];\nfor(var i = 0; i < arr.length; i++) {\nif( !array.includes( arr[i]) ) {//includes 检测数组是否有某个值\narray.push(arr[i]);\n}\n}\nreturn array\n}\nvar arr = [1,1,'true','true',true,true,15,15,false,false, undefined,undefined, null,null, NaN, NaN,'NaN', 0, 0, 'a', 'a',{},{}];\nconsole.log(unique(arr))\n//[1, \"true\", true, 15, false, undefined, null, NaN, \"NaN\", 0, \"a\", {…}, {…}]     //{}没有去重\n七、利用hasOwnProperty\nfunction unique(arr) {\nvar obj = {};\nreturn arr.filter(function(item, index, arr){\nreturn obj.hasOwnProperty(typeof item + item) ? false : (obj[typeof item + item] = true)\n})\n}\nvar arr = [1,1,'true','true',true,true,15,15,false,false, undefined,undefined, null,null, NaN, NaN,'NaN', 0, 0, 'a', 'a',{},{}];\nconsole.log(unique(arr))\n//[1, \"true\", true, 15, false, undefined, null, NaN, \"NaN\", 0, \"a\", {…}]   //所有的都去重了\n利用hasOwnProperty 判断是否存在对象属性")]),n._v(" "),r("p",[n._v("八、利用filter\nfunction unique(arr) {\nreturn arr.filter(function(item, index, arr) {\n//当前元素，在原始数组中的第一个索引==当前索引值，否则返回当前元素\nreturn arr.indexOf(item, 0) === index;\n});\n}\nvar arr = [1,1,'true','true',true,true,15,15,false,false, undefined,undefined, null,null, NaN, NaN,'NaN', 0, 0, 'a', 'a',{},{}];\nconsole.log(unique(arr))\n//[1, \"true\", true, 15, false, undefined, null, \"NaN\", 0, \"a\", {…}, {…}]\n九、利用递归去重\nfunction unique(arr) {\nvar array= arr;\nvar len = array.length;")]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[n._v("array.sort(function(a,b){   //排序后更加方便去重\n    return a - b;\n})\n\nfunction loop(index){\n    if(index >= 1){\n        if(array[index] === array[index-1]){\n            array.splice(index,1);\n        }\n        loop(index - 1);    //递归loop，然后数组去重\n    }\n}\nloop(len-1);\nreturn array;\n")])])]),r("p",[n._v("}\nvar arr = [1,1,'true','true',true,true,15,15,false,false, undefined,undefined, null,null, NaN, NaN,'NaN', 0, 0, 'a', 'a',{},{}];\nconsole.log(unique(arr))\n//[1, \"a\", \"true\", true, 15, false, 1, {…}, null, NaN, NaN, \"NaN\", 0, \"a\", {…}, undefined]\n十、利用Map数据结构去重\nfunction arrayNonRepeatfy(arr) {\nlet map = new Map();\nlet array = new Array();  // 数组用于返回结果\nfor (let i = 0; i < arr.length; i++) {\nif(map .has(arr[i])) {  // 如果有该key值\nmap .set(arr[i], true);\n} else {\nmap .set(arr[i], false);   // 如果没有该key值\narray .push(arr[i]);\n}\n}\nreturn array ;\n}\nvar arr = [1,1,'true','true',true,true,15,15,false,false, undefined,undefined, null,null, NaN, NaN,'NaN', 0, 0, 'a', 'a',{},{}];\nconsole.log(unique(arr))\n//[1, \"a\", \"true\", true, 15, false, 1, {…}, null, NaN, NaN, \"NaN\", 0, \"a\", {…}, undefined]\n创建一个空Map数据结构，遍历需要去重的数组，把数组的每一个元素作为key存到Map中。由于Map中不会出现相同的key值，所以最终得到的就是去重后的结果。")]),n._v(" "),r("p",[n._v("十一、利用reduce+includes\nfunction unique(arr){\nreturn arr.reduce((prev,cur) => prev.includes(cur) ? prev : [...prev,cur],[]);\n}\nvar arr = [1,1,'true','true',true,true,15,15,false,false, undefined,undefined, null,null, NaN, NaN,'NaN', 0, 0, 'a', 'a',{},{}];\nconsole.log(unique(arr));\n// [1, \"true\", true, 15, false, undefined, null, NaN, \"NaN\", 0, \"a\", {…}, {…}]\n十二、[...new Set(arr)]\n[...new Set(arr)]\n//代码就是这么少----（其实，严格来说并不算是一种，相对于第一种方法来说只是简化了代码）")])])}),[],!1,null,null,null);a.default=s.exports}}]);