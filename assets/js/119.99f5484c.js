(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{475:function(t,a,v){"use strict";v.r(a);var _=v(8),s=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"什么是设计模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是设计模式"}},[t._v("#")]),t._v(" 什么是设计模式")]),t._v(" "),a("p",[t._v("设计模式是对软件设计开发过程中反复出现的某类问题的通用解决方案。它并不是给现成的代码，而更多的是给与指导思想和方法论。每种语言中设计模式都有不同的实现方式，我们学习设计模式的目的是理解这些模式的内在思想和问题的解决思路，从而提升自己的设计理念。")]),t._v(" "),a("h2",{attrs:{id:"设计原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计原则"}},[t._v("#")]),t._v(" 设计原则")]),t._v(" "),a("p",[t._v("设计模式遵循 SOLID 五大原则，其中单一职责和开放封闭两个 JS 常用，后三者使用较少，了解即可")]),t._v(" "),a("h3",{attrs:{id:"s-单一职责原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#s-单一职责原则"}},[t._v("#")]),t._v(" S 单一职责原则")]),t._v(" "),a("ul",[a("li",[t._v("一个程序只做好一件事")]),t._v(" "),a("li",[t._v("如果功能过于复杂就拆分，每个部分保持独立")])]),t._v(" "),a("h3",{attrs:{id:"o-开放封闭原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#o-开放封闭原则"}},[t._v("#")]),t._v(" O 开放封闭原则")]),t._v(" "),a("ul",[a("li",[t._v("对扩展开放、对修改封闭")]),t._v(" "),a("li",[t._v("增加新需求时，扩展新代码，而非修改已有代码")])]),t._v(" "),a("h3",{attrs:{id:"l-里式替换原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#l-里式替换原则"}},[t._v("#")]),t._v(" L 里式替换原则")]),t._v(" "),a("ul",[a("li",[t._v("子类能覆盖父类")]),t._v(" "),a("li",[t._v("父类能出现的地方子类就能出现")]),t._v(" "),a("li",[t._v("JS 中较少使用")])]),t._v(" "),a("h3",{attrs:{id:"i-接口独立原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#i-接口独立原则"}},[t._v("#")]),t._v(" I 接口独立原则")]),t._v(" "),a("ul",[a("li",[t._v("保持接口的单一独立，避免出现“胖接口”")]),t._v(" "),a("li",[t._v("类似于单一职责原则，这里更关注接口")]),t._v(" "),a("li",[t._v("JS 中没有接口，使用较少")])]),t._v(" "),a("h3",{attrs:{id:"d-依赖导致原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#d-依赖导致原则"}},[t._v("#")]),t._v(" D 依赖导致原则")]),t._v(" "),a("ul",[a("li",[t._v("面向接口编程，依赖于抽象而不依赖于具体")]),t._v(" "),a("li",[t._v("使用方法只关注接口而不关注具体类的实现")]),t._v(" "),a("li",[t._v("JS 中使用较少（没有接口&弱类型）")])]),t._v(" "),a("h2",{attrs:{id:"原则体现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原则体现"}},[t._v("#")]),t._v(" 原则体现")]),t._v(" "),a("p",[t._v("以上 S 和 O 出现较多，可以用 promsie 来举例")]),t._v(" "),a("ul",[a("li",[t._v("单一职责原则：每个 then 中的逻辑只做好一件事")]),t._v(" "),a("li",[t._v("开方封闭原则：如果新增需求，就扩展 then")])])])}),[],!1,null,null,null);a.default=s.exports}}]);